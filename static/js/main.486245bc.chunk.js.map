{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","projectFirestore","timeStamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","React","map","key","layout","whileHover","opacity","img","src","alt","transition","delay","onClick","href","style","display","preventDefault","refFromURL","delete","then","alert","catch","handleDelete","Modal","selectedImg","modalOpen","modalClose","slideIndex","findIndex","getIndex","classList","contains","y","length","App","setModalOpen","open","close","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.486245bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>GalleryGram</h1>\r\n      <h2>Memories</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Title;","import * as firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBiPLUCb7OWx-Vtgu97BLvf9pGU-r6qq5k\",\r\n  authDomain: \"gallery-store-c165f.firebaseapp.com\",\r\n  projectId: \"gallery-store-c165f\",\r\n  storageBucket: \"gallery-store-c165f.appspot.com\",\r\n  messagingSenderId: \"508525758387\",\r\n  appId: \"1:508525758387:web:68276645f2a003f029adc6\",\r\n  measurementId: \"G-W67HCQD434\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectFirestore, projectStorage, timeStamp };","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timeStamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\");\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        var percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timeStamp();\r\n        collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./ProgressBar.css\";\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n  console.log(progress, url);\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + \"%\" }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from './ProgressBar';\r\nimport \"./UploadForm.css\";\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const changeHandler = (e) => {\r\n    var selected = e.target.files[0];\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please Select an image file (png or jpg)\");\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        var documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n    return () => unsub();\r\n  }, [collection]);\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timeStamp,\r\n} from \"../firebase/config\";\r\nimport \"./ImageGrid.css\";\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const [all, setAll] = React.useState([])\r\n  const { docs } = useFirestore(\"images\");\r\n\r\n  const handleDelete = (doc) => {\r\n    var fileRef = projectStorage.refFromURL(doc.url);\r\n    fileRef.delete().then(() => {\r\n      projectFirestore.collection(\"images\").doc(doc.id).delete().then(() => {\r\n        alert(\"Image successfully deleted!\");\r\n      }).catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n    }).catch((error) => {\r\n      // Uh-oh, an error occurred!\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            layout\r\n            whileHover={{ opacity: 1 }}\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt=\"uploaded pic\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n              onClick={() => setSelectedImg(doc.url)}\r\n            />\r\n            <motion.a\r\n              className=\"remove-image\"\r\n              href=\"\"\r\n              style={{ display: \"inline\" }}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleDelete(doc);\r\n              }}\r\n            >\r\n              &#215;\r\n            </motion.a>\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = ({ docs, selectedImg, setSelectedImg, modalOpen, modalClose }) => {\r\n  function getIndex(selectedImg) {\r\n    return docs.findIndex((img) => img.url === selectedImg);\r\n  }\r\n  var slideIndex = getIndex(selectedImg);\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n  const handlePrev = (e) => {\r\n    if (slideIndex - 1 > -1) {\r\n      setSelectedImg(docs[slideIndex - 1].url);\r\n    } else {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n\r\n  const handleNext = (e) => {\r\n    if (slideIndex + 1 < docs.length) {\r\n      setSelectedImg(docs[slideIndex + 1].url);\r\n    } else {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n  const dropIn = {\r\n    hidden: {\r\n      y: \"-100vh\",\r\n      opacity: 0,\r\n    },\r\n    visible: {\r\n      y: \"0\",\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.1,\r\n        type: \"spring\",\r\n        damping: 25,\r\n        stiffness: 500,\r\n      },\r\n    },\r\n    exit: {\r\n      y: \"100vh\",\r\n      opacity: 0,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <img\r\n        className=\"mySlides\"\r\n        src={selectedImg}\r\n        alt=\"enlarged pic\"\r\n        initial={{ y: \"100vh\" }}\r\n        animate={{ y: \"100vh\" }}\r\n      />\r\n      <a\r\n        className={`${slideIndex - 1 ? \"block\" : \"none\"} ${slideIndex === 0 ? \"\" : \"prev\"\r\n          }`}\r\n        onClick={handlePrev}\r\n      >\r\n        &#10094;\r\n      </a>\r\n      <a\r\n        className={`${slideIndex + 1 ? \"block\" : \"none\"} ${slideIndex === docs.length - 1 ? \"\" : \"next\"\r\n          }`}\r\n        onClick={handleNext}\r\n      >\r\n        &#10095;\r\n      </a>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Title from \"./comps/Title\";\r\nimport UploadForm from \"./comps/UploadForm\";\r\nimport ImageGrid from \"./comps/ImageGrid\";\r\nimport Modal from \"./comps/Modal\";\r\nimport useFirestore from \"./hooks/useFirestore\";\r\nfunction App() {\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (selectedImg && selectedImg?.length > 1) open();\r\n    else close()\r\n  }, [selectedImg])\r\n  const close = () => setModalOpen(false);\r\n  const open = () => setModalOpen(true);\r\n  const { docs } = useFirestore(\"images\");\r\n  return (\r\n    <div className=\"App\">\r\n      <Title />\r\n      <UploadForm />\r\n      <ImageGrid setSelectedImg={setSelectedImg} />\r\n      {modalOpen && (\r\n        <Modal\r\n          close={close}\r\n          modalOpen={modalOpen} selectedImg={selectedImg}\r\n          setSelectedImg={setSelectedImg}\r\n          docs={docs}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}